'''
효율성에서 전부 떨어져서 해설보고 품
skill의 누적합을 이용하고, 원래 보드에 합치는 방식으로
브루트포스를 최소화한다
'''
def solution(board, skill):
    answer = 0
    rc =  [ [0 for i in range(len(board[0])+1)] for i in range(len(board)+1)]
    
    for s in skill:
        skill_type = s[0]
        r1 = s[1]
        c1 = s[2]
        r2 = s[3]+1
        c2 = s[4]+1
        degree = s[5]    
        
        if skill_type == 1:
            rc[r1][c1] -= degree
            rc[r2][c1] += degree
            rc[r1][c2] += degree
            rc[r2][c2] -= degree
        else:
            rc[r1][c1] += degree
            rc[r2][c1] -= degree
            rc[r1][c2] -= degree
            rc[r2][c2] += degree

    for i in range(len(rc)):
        for j in range(len(rc[i])):
            if i != 0:
                rc[i][j] += rc[i-1][j]
            
    for i in range(len(rc)):
        for j in range(len(rc[i])):
            if j != 0:
                rc[i][j] += rc[i][j-1]
    
    for i in range(len(board)):
        for j in range(len(board[i])):
            if board[i][j] + rc[i][j] > 0:
                answer += 1
            
    return answer